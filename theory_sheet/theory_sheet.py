from PyQt5.QtWidgets import (
    QWidget, QVBoxLayout, QLabel, QPushButton, QTextEdit
)
from PyQt5.QtGui import QFont
from PyQt5.QtCore import Qt
<<<<<<< HEAD
import markdown
=======
>>>>>>> f2811227294d894fea2179fb1e3254a96035e244


class TheoryPage(QWidget):
    def __init__(self):
        super().__init__()
        self.init_ui()

    def init_ui(self):
        layout = QVBoxLayout()
        layout.setSpacing(20)
        layout.setAlignment(Qt.AlignTop)

        self.title = QLabel("–¢–µ–æ—Ä–µ—Ç–∏—á–µ—Å–∫–∏–π –º–∞—Ç–µ—Ä–∏–∞–ª")
        self.title.setFont(QFont('Arial', 32))
        self.title.setAlignment(Qt.AlignCenter)
        layout.addWidget(self.title)

        self.theory_text = QTextEdit()
        self.theory_text.setFont(QFont('Arial', 18))
        self.theory_text.setReadOnly(True)
        self.theory_text.setPlaceholderText("–ó–¥–µ—Å—å –ø–æ—è–≤–∏—Ç—Å—è –æ–±—ä—è—Å–Ω–µ–Ω–∏–µ –æ—Ç –ò–ò...")
        layout.addWidget(self.theory_text)

        # –ö–Ω–æ–ø–∫–∞ –ø–µ—Ä–µ—Ö–æ–¥–∞ –∫ —Ç–µ—Å—Ç—É
        self.test_button = QPushButton("üìù –ü–µ—Ä–µ–π—Ç–∏ –∫ —Ç–µ—Å—Ç—É")
        self.test_button.setFont(QFont('Arial', 20))
        self.test_button.setFixedHeight(60)
        self.test_button.setStyleSheet("""
            QPushButton {
                background-color: #4CAF50;
                color: white;
                border-radius: 12px;
            }
            QPushButton:hover {
                background-color: #45a049;
            }
        """)
        layout.addWidget(self.test_button)

        # –ö–Ω–æ–ø–∫–∞ –Ω–∞–∑–∞–¥
        self.back_button = QPushButton("üîô –ù–∞–∑–∞–¥")
        self.back_button.setFont(QFont('Arial', 20))
        self.back_button.setFixedHeight(60)
        self.back_button.setStyleSheet("""
            QPushButton {
                background-color: #2196F3;
                color: white;
                border-radius: 12px;
            }
            QPushButton:hover {
                background-color: #1976D2;
            }
        """)
        layout.addWidget(self.back_button)

        self.setLayout(layout)

    def showMaximized(self):
        super().showMaximized()
        from deepseek_requests.deepseek_requests import DeepSeekRequest
        a = DeepSeekRequest()
        response = a.deep_seek_request(
<<<<<<< HEAD
            '–ù–∞–ø–∏—à–∏ –º–Ω–µ —Ç–µ–æ—Ä–∏—é –ø–æ –∞—Ä—Ç–∏–∫–ª—è–º –≤ –∞–Ω–≥–ª–∏–π—Å–∫–æ–º —è–∑—ã–∫–µ, –±–µ–∑ –≤–æ–¥—ã, –¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ–µ –∫–æ–ª–∏—á–µ—Ç—Å–≤–æ –ø—Ä–∏–º–µ—Ä–æ–≤ –∏ –Ω–∞ —Ä—É—Å—Å–∫–æ–º —è–∑—ã–∫–µ')
        self.theory_text.setText(markdown.markdown(response))
=======
            '–ù–∞–ø–∏—à–∏ –º–Ω–µ —Ç–µ–æ—Ä–∏—é –ø–æ –∞—Ä—Ç–∏–∫–ª—è–º –≤ –∞–Ω–≥–ª–∏–π—Å–∫–æ–º —è–∑—ã–∫–µ (–±–µ–∑ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è markup —Ä–∞–∑–º–µ—Ç–∫–∏ –≤ —Ç–µ–∫—Å—Ç–µ (–ø—Ä–æ—Å—Ç–æ —Ç–µ–∫—Å—Ç –±–µ–∑ –≤—Å—è–∫–∏—Ö –∑–≤–µ–∑–¥–æ—á–µ–∫ –∏ –ø–æ–¥–æ–±–Ω—ã—Ö —ç–ª–µ–º–µ–Ω—Ç–æ–≤ —Ä–∞–∑–º–µ—Ç–∫–∏), –±–µ–∑ –≤–æ–¥—ã, –¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ–µ –∫–æ–ª–∏—á–µ—Ç—Å–≤–æ –ø—Ä–∏–º–µ—Ä–æ–≤)')
        # print(response)
        self.theory_text.setText(response)
>>>>>>> f2811227294d894fea2179fb1e3254a96035e244
